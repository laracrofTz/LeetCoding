# You are given two strings s and t.

# String t is generated by random shuffling string s and then add one more letter at a random position.

# Return the letter that was added to t.

# Example 1:
# Input: s = "abcd", t = "abcde"
# Output: "e"
# Explanation: 'e' is the letter that was added.

# Example 2:
# Input: s = "", t = "y"
# Output: "y"

# Constraints:

# 0 <= s.length <= 1000
# t.length == s.length + 1
# s and t consist of lowercase English letters.

# MY SOLUTION, Time complexity: O(n), Space complexity: O(n^2)
class Solution(object):
    def findTheDifference(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: str
        """
        for c in range(len(s)):
            if s[c] in t:
                t = t.replace(s[c],'',1) #immutable so we need to assign to another variable
        return t
    
# Initial confusions cuz im clown
# Thought we had to randomly shuffle 's' and add a letter to produce 't' but I realise they are both given
# Had the idea of comparing the strings by splitting each string and comparing the characters at each index, but 
# realised 't' is randomly shuffled ... so they characters will not necessarily be in the same index position.
#for c in t:
#   if c not in s:
#       return c --> DOES NOT WORK FOR TEST CASE s="a", t="aa"